{"version":3,"sources":["Components/card-list/card-list.module.css","Components/card/card.module.css","Components/search-box/search-box.module.css","Components/card/card.jsx","Components/card-list/card-list.jsx","Components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","styles","cardcontainer","alt","src","monster","id","name","email","CardList","cardlist","monsters","map","SearchBox","placeholder","handleChange","search","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,8B,gBCA7BD,EAAOC,QAAU,CAAC,cAAgB,8B,gBCAlCD,EAAOC,QAAU,CAAC,OAAS,6B,uMCWZC,EAVF,SAACC,GACV,OACI,sBAAKC,UAAWC,IAAOC,cAAvB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAAMM,QAAQC,GAAxC,4BACtB,6BAAKP,EAAMM,QAAQE,OACnB,4BAAIR,EAAMM,QAAQG,YCKfC,EATG,SAACV,GACX,OACA,qBAAKC,UAAWC,IAAOS,SAAvB,SACKX,EAAMY,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,gBCMhBO,EAXG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,uBACAf,UAAWC,IAAOe,OAClBC,KAAK,SACLH,YAAaA,EACbI,SAAUH,KCgCHI,E,kDAlCb,aAAc,IAAD,8BACX,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAc,IAJL,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAM1C,WACE,MAAiCC,KAAKN,MAA/Bd,EAAP,EAAOA,SAAWW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC/CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBACjD,OACK,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACAc,YAAY,kBACZC,aAAcgB,KAAKhB,eAEnB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA7BZI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49e1aefe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardlist\":\"card-list_cardlist__3aEqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardcontainer\":\"card_cardcontainer__2pVKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"search-box_search__1q7G5\"};","import styles from './card.module.css'\r\n\r\nconst Card = (props) =>{\r\n    return (\r\n        <div className={styles.cardcontainer}>\r\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=200x200`}/>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import styles from './card-list.module.css'\r\nimport Card from '../card/card'\r\n   \r\n   let CardList = (props) => {\r\n        return (\r\n        <div className={styles.cardlist}>\r\n            {props.monsters.map(monster=>(\r\n            <Card key={monster.id} monster={monster}/>\r\n            ))}</div>\r\n    )\r\n}\r\n\r\nexport default CardList","import styles from './search-box.module.css'\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input \r\n        className={styles.search}\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange} \r\n         />\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\nimport './App.css';\nimport CardList from './Components/card-list/card-list'\nimport SearchBox from './Components/search-box/search-box';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      monsters: [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=>response.json())\n      .then(users=>this.setState({monsters:users}))\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n render(){\n   const {monsters , searchField} = this.state\n   const filteredMonsters = monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchField.toLowerCase()))\n   return (\n        <div className=\"App\">\n          <h1>MONSTER SEARCHER</h1>\n          <SearchBox \n          placeholder='search monsters'\n          handleChange={this.handleChange}\n          />\n          <CardList monsters={filteredMonsters}/> \n        </div>\n   )\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}